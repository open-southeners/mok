# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test, Build & Release

on:
  push:
    tags:
      - "**"

jobs:
  release:
    runs-on: ubuntu-latest
    # needs: test
    strategy:
      matrix:
        # List of GOOS and GOARCH pairs from `go tool dist list`
        goosarch:
          - "darwin/amd64"
          - "darwin/arm64"
          - "linux/amd64"
          - "linux/arm64"
          - "windows/amd64"
    steps:
      - name: 🏗 Checkout code
        uses: actions/checkout@v4

      - name: 🏗 Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: 🏗 Set up Go environment
        id: "go-env"
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "binary-name=$BINARY_NAME" >> $GITHUB_OUTPUT
          echo "goos=$GOOS" >> $GITHUB_OUTPUT
          echo "goarch=$GOARCH" >> $GITHUB_OUTPUT

      - name: 🏗 Build binary
        run: go build -o "${{steps.go-env.outputs.binary-name}}" -v

      - name: 🏗 Get release info
        id: query-release-info
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: latest

      - name: 🚀 Publish to Github releases
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.query-release-info.outputs.release-notes }}
          make_latest: contains(${{ needs.check.outputs.branch }}, 'main')
          # prerelease: true
          fail_on_unmatched_files: true
          preserve_order: true
          files: ${{steps.go-env.outputs.binary-name}}
